import plotly.express as px
import streamlit as st


from core.utils import (clean_city,
                        make_full_analyses_anomalies,
                        process_city_name,
                        read_file)


categories_city = {
    '–ú–æ—Å–∫–≤–∞ –∏ –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å': [
        '–º–æ—Å–∫–≤–∞', '–¥–º–∏—Ç—Ä–æ–≤',
        '–±–∞–ª–∞—à–∏—Ö–∞', '–º—ã—Ç–∏—â–∏',
        '—Ä–ø —Ç–æ–º–∏–ª–∏–Ω–æ', '—Ö–∏–º–∫–∏',
        '–∏–≤–∞–Ω–æ–≤–æ', '—â–µ–ª–∫–æ–≤–æ', 'moscow'],
    '–Æ–∂–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥': [
        '–≤–æ–ª–≥–æ–≥—Ä–∞–¥', '–∞—Å—Ç—Ä–∞—Ö–∞–Ω—å',
        '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä', '—Å–æ—á–∏'],
    '–ü—Ä–∏–≤–æ–ª–∂—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥': [
        '—Ç–æ–ª—å—è—Ç—Ç–∏', '—É—Ñ–∞', '–æ—Ä–µ–Ω–±—É—Ä–≥',
        '—Ä—è–∑–∞–Ω—å', '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥', '–Ω–æ–≤–æ—á–µ–±–æ–∫—Å–∞—Ä—Å–∫'],
    '–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥': [
        '—Å–∞–Ω–∫—Ç–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '—á–µ—Ä–µ–ø–æ–≤–µ—Ü', '–≤–µ–ª–∏–∫–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥'],
    '–°–∏–±–∏—Ä—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥': [
        '–æ–º—Å–∫', '—É–ª–∞–Ω—É–¥—ç', '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫'],
    '–£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥': ['–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥'],
    '–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ –≥–æ—Ä–æ–¥–∞': [
        '–Ω–æ–≤–∞—è –∑–µ–ª–∞–Ω–¥–∏—è –≥–∞–º–µ–ª—å—Ç–æ–Ω',
        '–∞–≤—Å—Ç—Ä–∏—è –≤–µ–Ω–∞', '–≥–µ—Ä–º–∞–Ω–∏—è –±–∞–¥ –∫—ë–Ω–∏–≥ —Ö–µ—Å—Å–µ–Ω']
}


profi_table = read_file(st.secrets['spreadsheet_id_profi'],
                        st.secrets['zero_gid'])
for column in ['–ì–æ—Ä–æ–¥', '–ü—Ä–æ—Ñ–µ—Å—Å–∏—è']:
    profi_table[column].fillna('–ù–µ –∑–Ω–∞—é', inplace=True)
    profi_table[column] = profi_table[column].apply(
        lambda x: x.lower())
    profi_table[column] = profi_table[column].apply(
        lambda x: x.strip())
profi_table['–ì–æ—Ä–æ–¥'] = profi_table['–ì–æ—Ä–æ–¥'].apply(func=process_city_name)
profi_table['–ì–æ—Ä–æ–¥'] = profi_table['–ì–æ—Ä–æ–¥'].apply(clean_city)
profi_table['–ì–æ—Ä–æ–¥'] = profi_table['–ì–æ—Ä–æ–¥'].apply(lambda x: '–º–æ—Å–∫–≤–∞'
                                                  if x == "moscow" else x)
profi_table['–†–µ–≥–∏–æ–Ω'] = profi_table['–ì–æ—Ä–æ–¥'].apply(
    lambda x: [category for category,
               cities in categories_city.items()
               if x in cities][0]
    if any(x in cities for cities in categories_city.values()) else '')
number_profi = profi_table['ID –ø—Ä–æ—Ñ–∏'].count()


if __name__ == '__main__':
    st.title("–ü—Ä–æ—Ñ–∏ üßë‚Äçüíº")
    st.dataframe(profi_table)
    categoris_profi = st.text_input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é')
    categoris_profi = [i.strip() for i in categoris_profi.split(',')]
    profi_category_prof = {}
    for idx, category in enumerate(categoris_profi):
        widget = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}".format(
            category),
                                profi_table['–ü—Ä–æ—Ñ–µ—Å—Å–∏—è'].unique(), key=idx)
        profi_category_prof[category] = widget
    profi_table['–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏'] = profi_table['–ü—Ä–æ—Ñ–µ—Å—Å–∏—è'].apply(
        lambda x: [category for category,
                   prof in profi_category_prof.items()
                   if x in prof][0]
        if any(x in prof for prof in profi_category_prof.values())
        else '–î—Ä—É–≥–æ–µ')
    factor = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–∫—Ç–æ—Ä', ['–†–µ–≥–∏–æ–Ω', '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏'],
                          key=110000000)
    plot_table = (profi_table.groupby(by=factor)
                             .agg({'–ö–æ–ª-–≤–æ –≤—Å—Ç—Ä–µ—á c –¥–µ—Ç—å–º–∏': 'sum'})
                             .reset_index())
    fig = px.pie(plot_table, values='–ö–æ–ª-–≤–æ –≤—Å—Ç—Ä–µ—á c –¥–µ—Ç—å–º–∏', names=factor,
                 title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á c –¥–µ—Ç—å–º–∏ –ø–æ {}'.format(factor),
                 hole=0.5, color_discrete_sequence=px.colors.qualitative.Set2)
    st.plotly_chart(fig)
    agree = st.checkbox('–•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ñ–∞–∫—Ç–æ—Ä–∞–º?')
    if agree:
        factor = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–∫—Ç–æ—Ä',
                              ['–†–µ–≥–∏–æ–Ω', '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏'],
                              key=31000000)
        make_full_analyses_anomalies(profi_table,
                                     '–ö–æ–ª-–≤–æ –≤—Å—Ç—Ä–µ—á c –¥–µ—Ç—å–º–∏',
                                     factor)
    else:
        make_full_analyses_anomalies(profi_table, '–ö–æ–ª-–≤–æ –≤—Å—Ç—Ä–µ—á c –¥–µ—Ç—å–º–∏')
